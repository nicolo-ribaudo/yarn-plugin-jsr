/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-jsr",
factory: function (require) {
var plugin=(()=>{var I=Object.create;var R=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var W=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var m=(s=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(s,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):s)(function(s){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+s+'" is not supported')});var x=(s,e)=>{for(var t in e)R(s,t,{get:e[t],enumerable:!0})},F=(s,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of N(e))!J.call(s,o)&&o!==t&&R(s,o,{get:()=>e[o],enumerable:!(r=A(e,o))||r.enumerable});return s};var z=(s,e,t)=>(t=s!=null?I(W(s)):{},F(e||!s||!s.__esModule?R(t,"default",{value:s,enumerable:!0}):t,s)),G=s=>F(R({},"__esModule",{value:!0}),s);var Y=(s,e,t)=>{if(!e.has(s))throw TypeError("Cannot "+t)};var S=(s,e,t)=>{if(e.has(s))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(s):e.set(s,t)};var U=(s,e,t)=>(Y(s,e,"access private method"),t);var ee={};x(ee,{default:()=>X});var L=m("@yarnpkg/core");var D="jsr:",l=s=>s.startsWith(D),i=s=>s.slice(D.length);var y=class{supportsDescriptor(e){return l(e.range)&&!!L.structUtils.tryParseDescriptor(i(e.range),!0)}supportsLocator(e){return!1}shouldPersistResolution(){throw new Error("Unreachable")}bindDescriptor(e){return e}#e(e,t){let r=L.structUtils.parseDescriptor(i(e.range),!0);return r.range=`jsr:${r.range}`,t.configuration.normalizeDependency(r)}getResolutionDependencies(e,t){return t.resolver.getResolutionDependencies(this.#e(e,t.project),t)}async getCandidates(e,t,r){return await r.resolver.getCandidates(this.#e(e,r.project),t,r)}async getSatisfying(e,t,r,o){return o.resolver.getSatisfying(this.#e(e,o.project),t,r,o)}async resolve(e,t){throw new Error("Unreachable")}};var u=m("@yarnpkg/core"),g=z(m("semver"));var Z="http://jsr.io/",q="http://npm.jsr.io/";function T(s){let e=new Map;return(...t)=>{let r=t.join(",");if(e.has(r))return e.get(r);let o=s(...t);return e.set(r,o),o.catch(()=>e.delete(r)),o}}var K=T(async function(e,t){let r=await fetch(`${Z}/@${e}/${t}/meta.json`);if(!r.ok)throw r.status===404?new Error(`${t} does not exist on from JSR`):new Error(`Failed to fetch ${t} metadata from JSR`);return await r.json()});async function $(s,e){let t=[],r=[],o=await K(s,e);for(let[a,n]of Object.entries(o.versions))(n.yanked?r:t).push(a);if(e==="http")debugger;return{valid:t,yanked:r}}var C=T(async function(e,t){let r=await fetch(`${q}/@jsr/${e}__${t}`);if(!r.ok)throw new Error(`Failed to fetch ${t} npm metadata from JSR`);return await r.json()});var P=class{supportsDescriptor(e){return l(e.range)&&!!g.validRange(i(e.range))}supportsLocator(e){return l(e.reference)}shouldPersistResolution(){return!0}bindDescriptor(e){return e}getResolutionDependencies(){return{}}async getCandidates(e){if(!e.scope)throw new Error("jsr packages are scoped: @???/"+e.name);let t=new g.Range(i(e.range)),r=await $(e.scope,e.name),o=r.valid.map(a=>new g.SemVer(a)).filter(a=>t.test(a));return o.length===0&&(o=r.yanked.map(a=>new g.SemVer(a)).filter(a=>t.test(a))),o.sort((a,n)=>-a.compare(n)),o.map(a=>u.structUtils.makeLocator(e,`${D}${a.raw}`))}async getSatisfying(e,t,r,o){throw new Error("Not implemented")}async resolve(e,t){let r=i(e.reference),a=(await C(e.scope,e.name)).versions[r],n=new Map;for(let[c,p]of Object.entries(a.dependencies)){let v=u.structUtils.parseIdent(c);if(c.startsWith("@jsr/")){let[j,B]=c.slice(5).split("__");p=`jsr:@${j}/${B}@${p}`}else p=`npm:${p}`;let h=u.structUtils.makeDescriptor(v,p);n.set(h.identHash,h)}return{...e,version:r,languageName:"node",linkType:u.LinkType.HARD,bin:new Map,dependencies:n,dependenciesMeta:new Map,peerDependencies:new Map,peerDependenciesMeta:new Map}}};var k=m("@yarnpkg/core");var w=class{supports(e){return l(e.reference)}getLocalPath(e,t){return null}async fetch(e,t){let r=t.checksums.get(e.locatorHash)||null,[o,a,n]=await t.cache.fetchPackageFromCache(e,r,{onHit(){t.report.reportCacheHit(e)},onMiss(){t.report.reportCacheMiss(e,`${k.structUtils.prettyLocator(t.project.configuration,e)} can't be found in the cache and will be fetched from the remote registry`)},loader:()=>this.#e(e,t),...t.cacheOptions});return{packageFs:o,releaseFs:a,prefixPath:k.structUtils.getIdentVendorPath(e),checksum:n}}async#e(e,t){let r=await fetch(`https://npm.jsr.io/~/5/@jsr/${e.scope}__${e.name}/${i(e.reference)}.tgz`);if(!r.ok)throw new Error(`Failed to fetch @${e.scope}/${e.name} tarball from jsr`);return await k.tgzUtils.convertToZip(Buffer.from(await r.arrayBuffer()),{configuration:t.project.configuration,prefixPath:k.structUtils.getIdentVendorPath(e),stripComponents:1})}};var V=m("@yarnpkg/cli"),_=m("@yarnpkg/core"),d=m("clipanion");var b,H,f=class extends V.BaseCommand{constructor(){super(...arguments);S(this,b);this.exact=d.Option.Boolean("-E,--exact",!1,{description:"Don't use any semver modifier on the resolved range"});this.tilde=d.Option.Boolean("-T,--tilde",!1,{description:"Use the `~` semver modifier on the resolved range"});this.caret=d.Option.Boolean("-C,--caret",!1,{description:"Use the `^` semver modifier on the resolved range"});this.dev=d.Option.Boolean("-D,--dev",!1,{description:"Add a package as a dev dependency"});this.peer=d.Option.Boolean("-P,--peer",!1,{description:"Add a package as a peer dependency"});this.packages=d.Option.Rest()}async execute(){let t=await Promise.all(this.packages.map(r=>U(this,b,H).call(this,r)));return this.cli.run(["add",this.exact&&"--exact",this.tilde&&"--tilde",this.caret&&"--caret",this.dev&&"--dev",this.peer&&"--peer",...t].filter(Boolean))}};b=new WeakSet,H=async function(t){if(t.includes("@",1))return t;let{scope:r,name:o}=_.structUtils.parseIdent(t);if(!r)throw new Error(`jsr packages are scoped: ${t}`);let a=await $(r,o),n=a.valid.length>0?a.valid[0]:a.yanked[0],c=this.exact?"":this.tilde?"~":"^";return`${t}@jsr:${c}${n}`},f.paths=[["jsr","add"]],f.usage=d.Command.Usage({description:"add JSR dependencies to the project",details:`
      This command adds a package to the package.json from the JSR registry.
    `,examples:[["Add a JSR package","$0 jsx add @luca/flag"],["Add a specific version range of a JSR package","$0 jsr add @luca/flag@^0.1.0"]]});var M={};x(M,{beforeWorkspacePacking:()=>Q});var O=m("@yarnpkg/core");var he=Function.call.bind(Object.prototype.hasOwnProperty);async function Q(s,e){let t=!1;for(let r of["dependencies","peerDependencies"]){let o=s.manifest.getForScope(r).values();for(let a of o){if(!l(a.range))continue;let n=i(a.range),c,p,v;n.startsWith("@")?{scope:c,name:p,range:v}=O.structUtils.parseDescriptor(n):(v=n,{scope:c,name:p}=a);let h=`npm:@jsr/${c}__${p}@${v}`,j=O.structUtils.stringifyIdent(a);e[r][j]=h,s.manifest.raw[r][j]=h,s.manifest[r].set(a.identHash,O.structUtils.makeDescriptor(a,h)),t=!0}}t&&await s.project.configuration.triggerHook(r=>r.beforeWorkspacePacking,s,e)}var X={resolvers:[y,P],fetchers:[w],commands:[f],hooks:M};return G(ee);})();
return plugin;
}
};
